package redis


// redis 遇到问题的4种情况
// 缓存和数据库双写一致问题：先对权重较高的数据(一般是数据库)进行修改，然后直接删除所有次级权重
// 缓存雪崩问题：所有缓存都要设置过期时间，如果不设置过期时间为什么不放入数据库,不要设置固定的缓存时间，设置一定范围的缓存时间，缓存时间一定 >0，如果有0的范围，为什么还要设置缓存
// 缓存击穿问题：当第一次通过在数据和缓存中都找不到的时候，在缓存中设置该key 值为自定义 比如 DISABLE ，之后所有的数据查询都会打到这个缓存只值中
// 缓存的并发击穿问题：在查询的时候，我给他添加了一个同步锁，只有第一条数据去数据库中查并且返回到redis中后才能查询，这是数据库中已近存在了值

// redis :
//	string 	// 常用方法
//	hash	// 结构化对象
//	list	// 可以做成